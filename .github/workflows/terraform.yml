name: Terraform Workflow
on:
  push:
    branches:
      - main
      - feature
env:
  TF_CLOUD_ORGANIZATION: "Intuitive"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "intuitive-terraform-lab"
  CONFIG_DIRECTORY: "./"
jobs:
  validate:
    name: Validate Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
     
      - name: Terraform Init
        id: init
        run: |
          export TF_WORKSPACE="intuitive-terraform-lab"
          terraform init -input=false

      - name: Validate
        run: terraform validate

  scan:
    name: Scan Terraform
    runs-on: ubuntu-latest
    permissions:
      # required for all workflows
      security-events: write
      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Terraform security scan
        id: terrascan
        uses: tenable/terrascan-action@main
        with:
          iac_type: 'terraform'
          iac_version: 'v14'
          policy_type: 'aws'
          only_warn: true
          sarif_upload: true
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: terrascan.sarif
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  plan:
    name: Plan Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: |
          export TF_WORKSPACE="intuitive-terraform-lab"
          terraform init -input=false
          terraform workspace show

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: |
          export TF_WORKSPACE="intuitive-terraform-lab"
          terraform plan -input=false -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
